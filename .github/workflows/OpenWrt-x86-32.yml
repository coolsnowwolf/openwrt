#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-x86-32

on:
  push:
    branches: 
      - lede-17.01
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: SSR
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/YiuKi520/helloworld.git

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_generic=y
          CONFIG_TARGET_x86_generic_Generic=y
          EOF
          # 所集成的固件类型
          cat >> .config <<EOF
          # CONFIG_TARGET_ROOTFS_INITRAMFS is not set
          # CONFIG_TARGET_ROOTFS_CPIOGZ is not set
          CONFIG_TARGET_ROOTFS_TARGZ=y
          # CONFIG_TARGET_ROOTFS_EXT4FS is not set
          CONFIG_TARGET_ROOTFS_SQUASHFS=y
          CONFIG_TARGET_SQUASHFS_BLOCK_SIZE=256
          CONFIG_TARGET_UBIFS_FREE_SPACE_FIXUP=y
          CONFIG_TARGET_UBIFS_JOURNAL_SIZE=""
          CONFIG_GRUB_IMAGES=y
          CONFIG_GRUB_EFI_IMAGES=y
          # CONFIG_GRUB_CONSOLE is not set
          CONFIG_GRUB_BOOTOPTS="nomodeset"
          CONFIG_GRUB_TIMEOUT="0"
          CONFIG_GRUB_TITLE="OpenWrt"
          # CONFIG_ISO_IMAGES is not set
          # CONFIG_VDI_IMAGES is not set
          # CONFIG_VMDK_IMAGES is not set
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_COREMARK_NUMBER_OF_THREADS=128
          CONFIG_TARGET_KERNEL_PARTSIZE=64
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024

          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_6rd=y
          CONFIG_PACKAGE_6to4=y

          CONFIG_PACKAGE_kmod-usb-dwc2=y
          CONFIG_PACKAGE_kmod-usb-dwc3=y
          CONFIG_PACKAGE_kmod-usb-ehci=y
          CONFIG_PACKAGE_kmod-usb-ledtrig-usbport=y
          CONFIG_PACKAGE_kmod-usb-net-aqc111=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-eem=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-mbim=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-subset=y
          CONFIG_PACKAGE_kmod-usb-net-dm9601-ether=y
          CONFIG_PACKAGE_kmod-usb-net-hso=y
          CONFIG_PACKAGE_kmod-usb-net-huawei-cdc-ncm=y
          CONFIG_PACKAGE_kmod-usb-net-ipheth=y
          CONFIG_PACKAGE_kmod-usb-net-kalmia=y
          CONFIG_PACKAGE_kmod-usb-net-kaweth=y
          CONFIG_PACKAGE_kmod-usb-net-mcs7830=y
          CONFIG_PACKAGE_kmod-usb-net-pegasus=y
          CONFIG_PACKAGE_kmod-usb-net-pl=y
          CONFIG_PACKAGE_kmod-usb-net-qmi-wwan=y
          CONFIG_PACKAGE_kmod-usb-net-rndis=y
          CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
          # CONFIG_PACKAGE_kmod-usb-net-rtl8152-vendor is not set
          CONFIG_PACKAGE_kmod-usb-net-sierrawireless=y
          CONFIG_PACKAGE_kmod-usb-net-smsc95xx=y
          CONFIG_PACKAGE_kmod-usb-net-sr9700=y
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          CONFIG_PACKAGE_kmod-usb-printer=y
          CONFIG_PACKAGE_kmod-usb-roles=y
          CONFIG_PACKAGE_kmod-usb-wdm=y
          CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y

          #磁盘管理及休眠
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-hd-idle=y

          #文件传输
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-fileassistant=y
          CONFIG_PACKAGE_luci-app-filebrowser=y

          # CONFIG_PACKAGE_luci-app-ipsec-server=y
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          # CONFIG_PACKAGE_luci-app-ipsec-vpnserver-manyusers is not set

          #docker
          # CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-app-dockerman=y

          # CONFIG_PACKAGE_luci-app-bypass=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Shadowsocks_Libev_Client=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_ShadowsocksR_Libev_Client=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Shadowsocks_Libev_Server=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_ShadowsocksR_Libev_Server=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Simple_obfs=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Simple_obfs_server is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_V2ray_plugin is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Xray=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Trojan=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Trojan-Go=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_NaiveProxy is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Kcptun is not set
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Socks5_Proxy=y
          # CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Socks_Server=y

          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_obfs=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y

          CONFIG_PACKAGE_luci-app-v2ray-server=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-webadmin=y
          CONFIG_PACKAGE_ddns-scripts_dnspod=y
          CONFIG_PACKAGE_ddns-scripts_aliyun=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-ntpc=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-pptp-server=y
          CONFIG_PACKAGE_luci-app-pushbot=y
          CONFIG_PACKAGE_luci-app-qos=y
          CONFIG_PACKAGE_luci-app-smartdns=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-uhttpd=y
          CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-kodexplorer=y
          # CONFIG_PACKAGE_luci-app-sqm=y
          # CONFIG_PACKAGE_luci-app-syncdial=y
          # CONFIG_PACKAGE_luci-app-udpxy=y
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-wireguard is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_Go is not set
          # CONFIG_PACKAGE_luci-app-qbittorrent is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          # CONFIG_PACKAGE_luci-app-passwall=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Server=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin is not set
          # CONFIG_PACKAGE_luci-app-pppoe-relay is not set
          # CONFIG_PACKAGE_luci-app-frpc=y
          # CONFIG_PACKAGE_luci-app-frps=y
          # CONFIG_PACKAGE_luci-app-mwan3=y
          # CONFIG_PACKAGE_luci-app-n2n_v2=y
          # CONFIG_PACKAGE_luci-app-netdata=y
          # CONFIG_PACKAGE_luci-app-nps=y
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          # CONFIG_PACKAGE_luci-app-dnsfilter=y
          # CONFIG_PACKAGE_luci-app-aliyundrive-webdav=y
          # CONFIG_PACKAGE_luci-app-jd-dailybonus=y
          CONFIG_PACKAGE_php7=y
          CONFIG_PACKAGE_php7-cgi=y
          CONFIG_PACKAGE_php7-fastcgi=y
          CONFIG_PACKAGE_php7-fpm=y
          CONFIG_PACKAGE_php7-mod-curl=y
          CONFIG_PACKAGE_php7-mod-gd=y
          CONFIG_PACKAGE_php7-mod-iconv=y
          CONFIG_PACKAGE_php7-mod-json=y
          CONFIG_PACKAGE_php7-mod-mbstring=y
          CONFIG_PACKAGE_php7-mod-opcache=y
          CONFIG_PACKAGE_php7-mod-session=y
          CONFIG_PACKAGE_php7-mod-zip=y
          CONFIG_PACKAGE_php7-mod-sqlite3=y
          CONFIG_PACKAGE_php7-mod-pdo=y
          CONFIG_PACKAGE_php7-mod-pdo-sqlite=y
          CONFIG_PACKAGE_php7-mod-pdo-mysql=y
          CONFIG_PACKAGE_php7-mod-dom=y
          CONFIG_PACKAGE_php7-mod-xml=y
          CONFIG_PACKAGE_php7-mod-xmlreader=y
          CONFIG_PACKAGE_php7-mod-xmlwriter=y
          CONFIG_PACKAGE_php7-cli=y
          CONFIG_PACKAGE_php7-mod-bcmath=y
          CONFIG_PACKAGE_php7-mod-calendar=y
          CONFIG_PACKAGE_php7-mod-ctype=y
          CONFIG_PACKAGE_php7-mod-exif=y
          CONFIG_PACKAGE_php7-mod-fileinfo=y
          CONFIG_PACKAGE_php7-mod-filter=y
          CONFIG_PACKAGE_php7-mod-ftp=y
          CONFIG_PACKAGE_php7-mod-gettex=y
          CONFIG_PACKAGE_php7-mod-gmp=y
          CONFIG_PACKAGE_php7-mod-imap=y
          CONFIG_PACKAGE_php7-mod-intl=y
          CONFIG_PACKAGE_php7-mod-ldap=y
          CONFIG_PACKAGE_php7-mod-mysqli=y
          CONFIG_PACKAGE_php7-mod-mysqlnd=y
          CONFIG_PACKAGE_php7-mod-openssl=y
          CONFIG_PACKAGE_php7-mod-pcntl=y
          CONFIG_PACKAGE_php7-mod-pdo-pgsql=y
          CONFIG_PACKAGE_php7-mod-pgsql=y
          CONFIG_PACKAGE_php7-mod-phar=y
          CONFIG_PACKAGE_php7-mod-shmop=y
          CONFIG_PACKAGE_php7-mod-simplexml=y
          CONFIG_PACKAGE_php7-mod-snmp=y
          CONFIG_PACKAGE_php7-mod-soap=y
          CONFIG_PACKAGE_php7-mod-sockets=y
          CONFIG_PACKAGE_php7-mod-sysvmsg=y
          CONFIG_PACKAGE_php7-mod-sysvsem=y
          CONFIG_PACKAGE_php7-mod-sysvshm=y
          CONFIG_PACKAGE_php7-mod-tokenizer=y

          # CONFIG_TESTING_KERNEL=y
          # CONFIG_LINUX_5_4=y

          # CONFIG_PACKAGE_mariadb-client=y
          # CONFIG_PACKAGE_mariadb-client-base=y
          # CONFIG_PACKAGE_mariadb-client-extra=y
          # CONFIG_PACKAGE_mariadb-server-extra=y
          # CONFIG_PACKAGE_libparted=y
          # CONFIG_PACKAGE_libaio=y
          # CONFIG_PACKAGE_sudo=y
          # CONFIG_PACKAGE_liblzma=y
          # CONFIG_PACKAGE_mariadb-server=y
          # CONFIG_PACKAGE_mariadb-server-base=y

          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-opentomcat=y
          CONFIG_PACKAGE_luci-theme-atmaterial=y
          EOF
          
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          cat >> .config <<EOF
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
